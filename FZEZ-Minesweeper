import tkinter as tk
from tkinter import messagebox
import random

class Minesweeper:
    def __init__(self, master, size, num_mines):
        self.master = master
        self.size = size
        self.num_mines = num_mines
        self.create_widgets()
        self.create_board()

    def create_widgets(self):
        self.buttons = []
        for i in range(self.size):
            row = []
            for j in range(self.size):
                button = tk.Button(self.master, width=2, height=1)
                button.grid(row=i, column=j)
                button.bind("<Button-1>", lambda event, i=i, j=j: self.reveal(event, i, j))
                button.bind("<Button-3>", lambda event, i=i, j=j: self.flag(event, i, j))
                row.append(button)
            self.buttons.append(row)

    def create_board(self):
        self.board = [[0 for _ in range(self.size)] for _ in range(self.size)]
        self.mines = random.sample(range(self.size * self.size), self.num_mines)
        for mine in self.mines:
            row = mine // self.size
            col = mine % self.size
            self.board[row][col] = -1
            for i in range(-1, 2):
                for j in range(-1, 2):
                    if (
                        0 <= row + i < self.size
                        and 0 <= col + j < self.size
                        and self.board[row + i][col + j] != -1
                    ):
                        self.board[row + i][col + j] += 1

    def reveal(self, event, row, col):
        button = event.widget
        if self.board[row][col] == -1:
            button.config(text="*", state="disabled")
            messagebox.showinfo("Game Over", "You hit a mine! Game over.")
            self.restart_game()
        else:
            self.reveal_cell(row, col)
            if all(
                all(button["state"] == "disabled" for button in row)
                for row in self.buttons
            ):
                messagebox.showinfo(
                    "Congratulations", "You win! All mines have been flagged."
                )
                self.restart_game()
    def reveal_cell(self, row, col):
    if 0 <= row < self.size and 0 <= col < self.size:
        button = self.buttons[row][col]
        if button["state"] != "disabled":
            button.config(text=str(self.board[row][col]), state="disabled")
            if self.board[row][col] == 0:
                for i in range(-1, 2):
                    for j in range(-1, 2):
                        self.reveal_cell(row + i, col + j)


    def flag(self, event, row, col):
        button = event.widget
        if button["text"] == "":
            button.config(text="F")
        elif button["text"] == "F":
            button.config(text="")
    
    def restart_game(self):
        self.master.destroy()
        start_game()

def start_game():
    root = tk.Tk()
    root.title("FZEZ-Minesweeper")
    label = tk.Label(root, text="Choose difficulty level:")
    label.pack()

    def start_game_with_difficulty(size, num_mines):
        root.destroy()
        game = tk.Tk()
        Minesweeper(game, size, num_mines)
        game.mainloop()

    simple_button = tk.Button(
        root, text="Simple", command=lambda: start_game_with_difficulty(10, 10)
    )
    simple_button.pack()
    medium_button = tk.Button(
        root, text="Medium", command=lambda: start_game_with_difficulty(16, 20)
    )
    medium_button.pack()
    complex_button = tk.Button(
        root, text="Complex", command=lambda: start_game_with_difficulty(25, 40)
    )
    complex_button.pack()

    root.mainloop()

start_game()
